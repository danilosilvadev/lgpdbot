/*
@author: tiagosatur
@github: @tiagosatur
*/

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;


/*
  This file generates margins and paddings helper classes according to
  defined breakpoints.

  I. e.:

  .bf-m-1 {
    margin: 0.5rem !important;
  }

  .bf-m-bottom-4 {
    margin-bottom: 2rem !important;
  }

  .bf-m-top-md-2 {
     margin-top: 1rem !important;
   }

  .bf-p-7 {
    padding: 3.5rem !important;
  }

  .bf-p-top-7 {
    padding-top: 3.5rem !important;
  }

  .bf-p-left-14 {
    padding-left: 7rem !important;
  }
  .bf-p-y-xl-16 {
    padding: 8rem 0 !important;
  }

  Author: @tiagosatur

*/

/*
@each $breakpoint, $value in ($grid-breakpoints) {
  $spacing: 0.5;

  @if($value == 0) {
    @each $prop, $abbrev in (margin: m, padding: p) {
      @for $i from 0 through 16 {

        .#{$abbrev}-#{$i} {
          #{$prop}: #{$i * $spacing}rem !important;
        }

        @each $side in (top, bottom, left, right, x, y) {
          @if($side == x) {
            .#{$abbrev}-#{$side}-#{$i} {
              #{$prop}: 0 #{$i * $spacing}rem !important;
            }
          } @else if($side == y) {
            .#{$abbrev}-#{$side}-#{$i} {
              #{$prop}: #{$i * $spacing}rem 0 !important;
            }
          } @else {
            .#{$abbrev}-#{$side}-#{$i} {
              #{$prop}-#{$side}: #{$i * $spacing}rem !important;
            }
          }

        }
      }
    }

  } @else {

    @media(min-width: $value) {
      @each $prop, $abbrev in (margin: m, padding: p) {
        @for $i from 0 through 16 {

          .#{$abbrev}-#{$breakpoint}-#{$i} {
            #{$prop}: #{$i * $spacing}rem !important;
          }


          @each $side in (top, bottom, left, right, x, y) {
            @if($side == x) {
              .#{$abbrev}-#{$side}-#{$breakpoint}-#{$i} {
                #{$prop}: 0 #{$i * $spacing}rem !important;
              }
            } @else if($side == y) {
              .#{$abbrev}-#{$side}-#{$breakpoint}-#{$i} {
                #{$prop}: #{$i * $spacing}rem 0 !important;
              }
            } @else {
              .#{$abbrev}-#{$side}-#{$breakpoint}-#{$i} {
                #{#{$prop}}-#{$side}: #{$i * $spacing}rem !important;
              }
            }
          }

        }

      }
    }
  }
}



*/

$sides: (
    "": "",
    "t": "top",
    "b": "bottom",
    "l": "left",
    "r": "right",
);

$breakpoints: (
    "": "",
    "xs": 576px,
    "sm": 768px,
    "md": 992px,
    "lg": 1200px,
);

@each $breakName, $breakValue in $breakpoints {
    $spacing: 0.5;
    @each $sideName, $sideValue in $sides {
        @for $i from 0 through 10 {
        
            $property: if($sideName == '', '', -#{$sideValue});
            $space: $i * 2;
            $selector: '';

            @if $breakName != "" {
                $selector: #{$sideName}-#{$breakName}-#{$i};
            } @else {
                $selector: #{$sideName}-#{$i};
            }

            @if $breakName != "" {
                @media (min-width: $breakValue) {
                .m#{$selector} {
                    margin#{$property}: #{$space}rem;
                }
        
                .p#{$selector} {
                    padding#{$property}: #{$space}rem;
                }
                }
            } @else {
                .m#{$selector} {
                margin#{$property}: #{$space}rem;
                }

                .p#{$selector} {
                padding#{$property}: #{$space}rem;
                }
            }
        }
    }
}
